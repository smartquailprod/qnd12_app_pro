#cloud-config

groups:
  - docker
users:
  - default
  # the docker service account
  - name: docker-service
    groups: docker
package_upgrade: true
packages:
  - wget
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  - docker.io
  - kubelet
  - kubectl
  - [kubeadm, 1.7.10-00]
runcmd:
  # install docker following the guide: https://docs.docker.com/install/linux/docker-ce/ubuntu/
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get -y update
  - sudo apt-get -y install docker-ce docker-ce-cli containerd.io
  - sudo systemctl enable docker
  # install docker-compose following the guide: https://docs.docker.com/compose/install/
  - sudo curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  # Install kubectl
  - sudo snap install kubectl --classic
  - sudo apt install virtualbox virtualbox-ext-pack
  # Install Minikube
 # - wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
 # - sudo wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
 # - chmod +x minikube-linux-amd64
 # - sudo mv minikube-linux-amd64 /usr/local/bin/minikube
 #Instalamos el cluster k3s del nodo qnode0
  - sudo curl -sfL https://get.k3s.io | sh - 
  # Instalamos el load-balancer NGINX en el cluster
  - k3s kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.26.1/deploy/static/mandatory.yaml 
  - k3s kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.26.1/deploy/static/provider/cloud-generic.yaml
 # - k3s kubectl create namespace traefik
  - k3s kubectl create namespace qnd12-app
  - k3s kubectl create namespace postgres
  - k3s kubectl create namespace cert-manager
  - k3s kubectl create namespace argocd
  - k3s kubectl create namespace ingress-nginx
  - mkdir -p  kube
  - cd kube/ 
  - git config --global user.name "smartquailpro"
  - git config --global user.email "smartquail.pro@gmail.com"
  - git clone https://github.com/smartquailprod/qnd12_app_pro.git
  - cd  /kube/qnd12_app_pro/qnd12_app_pro/
  - k3s kubectl -n qnd12-app create secret generic qnd12-app-secret --from-env-file=.env_pro
  # Instalamos la NGINX:
  - cd /kube/qnd12_app_pro/qnd12_arch_2/qnd12_nginx_ingress/
  - k3s kubectl apply -f .
  # Instalamos Postgres y la base de datos
  - cd /kube/qnd12_app_pro/qnd12_arch_2/qpostgres/templates/
  - k3s kubectl apply -f .
  #Instalamos qnd12-app
  - cd /kube/qnd12_app_pro/qnd12_arch_2/qnd12_app_pro/templates/
  - k3s kubectl apply -f .
 
power_state:
  mode: reboot
  message: Restarting after installing docker & docker-compose